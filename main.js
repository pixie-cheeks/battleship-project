(()=>{"use strict";class t{#t=(()=>new Array(10).fill(null).map((()=>new Array(10).fill(null))))();#e=(()=>new Array(10).fill(null).map((()=>new Array(10).fill(!1))))();#r=[];#s=[];#a=[];#i=0;#l=0;#o(t,e){let[r,s]=t;this.#t[r][s]=e}static#n(t,e,r){const s=[];let a,[i,l]=t;a=r?()=>{l+=1}:()=>{i+=1};for(let t=0;t<e;t++)s.push([i,l]),a();return s}getCell(t){let[e,r]=t;if(e<0||r<0||e>9||r>9)throw new Error("Coordinate goes out of bounds");return this.#t[e][r]}placeShip(e){let{coordinate:r,ship:s,isVertical:a=!1}=e;const i=t.#n(r,s.getLength(),a);i.forEach((t=>{if(this.getCell(t))throw new Error("Ships can't overlap")})),i.forEach((t=>this.#o(t,s))),s.isVertical=a,s.coordinates=i,this.#a.push(...i),this.#i+=1}receiveAttack(t,e){if(this.#e[t][e])throw new Error("This cell is already shot!");this.#e[t][e]=!0;const r=this.getCell([t,e]);return r?(r.hit(),this.#s.push([t,e]),r.isSunk()&&(this.#l+=1),!0):(this.#r.push([t,e]),!1)}deleteShip(t){const e=this.getCell(t);return e?(e.coordinates.forEach((t=>this.#o(t,null))),e):null}getMissedShots(){return this.#r}getHitShots(){return this.#s}getPlacedShips(){return this.#a}areAllShipsSunk(){return this.#l>=this.#i}}const e=t;class r{#h=(()=>new e)();#e=(()=>new Array(10).fill(null).map((()=>new Array(10).fill(!1))))();#c=0;constructor(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const r=t?"Computer":"Player";this.name=e||r,this.posessiveName="s"===this.name.charAt(this.name.length-1).toLowerCase()?`${this.name}'`:`${this.name}'s`,this.isComputer=t}getBoard(){return this.#h}static#d(t,e){return Math.floor(Math.random()*(e-t+1))+t}static#u(){return[r.#d(0,9),r.#d(0,9)]}getAttackedCell(t){if(this.#c>=100)return!1;const[e,s]=r.#u();return this.#e[e][s]?this.getAttackedCell(t):(this.#e[e][s]=!0,this.#c+=1,[e,s])}}const s=r,a=class{#m=0;#y=0;constructor(t){this.#m=t}getLength(){return this.#m}getTimesHit(){return this.#y}hit(){this.#y+=1}isSunk(){return this.#y>=this.#m}},i=class{#p=(()=>Array.from(document.querySelectorAll(".gameboard__cell")))();#g=(()=>Array.from(document.querySelectorAll(".gameboard")))();#S=(()=>document.querySelector(".turn-plate"))();constructor(t,e,r){this.isPVP=r,this.players=[t,e],this.activePlayer=t,this.inactivePlayer=e,this.init()}init(){this.#g.forEach(((t,e)=>this.bindAttackEvent(t,e))),this.render()}resetDOM(){this.#p.forEach((t=>{t.className="gameboard__cell"}))}render(){this.resetDOM(),this.#S.textContent=`${this.activePlayer.posessiveName} turn`,this.players[0].getBoard().getPlacedShips().forEach((t=>{let[e,r]=t;this.#g[0].querySelector(`[data-index="${e}${r}"`).classList.add("gameboard__cell--occupied")})),this.players.forEach(((t,e)=>{const r=t.getBoard();r.getHitShots().forEach((t=>{let[r,s]=t;this.#g[e].querySelector(`[data-index="${r}${s}"]`).classList.add("gameboard__cell--hit")})),r.getMissedShots().forEach((t=>{let[r,s]=t;this.#g[e].querySelector(`[data-index="${r}${s}"]`).classList.add("gameboard__cell--miss")}))}))}bindAttackEvent(t,e){t.addEventListener("click",(t=>{const r=t.target;if(!r.classList.contains("gameboard__cell"))return;const s=r.dataset.index.split("").map((t=>Number(t)));this.attackBoard(s,this.players[e])}))}switchActivePlayer(){[this.activePlayer,this.inactivePlayer]=[this.inactivePlayer,this.activePlayer]}attackBoard(t,e){let[r,s]=t,a=!1;if(this.inactivePlayer!==e)return!1;try{a=this.inactivePlayer.getBoard().receiveAttack(r,s)}catch(t){return!1}return a||this.switchActivePlayer(),this.render(),this.inactivePlayer.getBoard().areAllShipsSunk()?this.endGame():!this.activePlayer.isComputer||(setTimeout((()=>{this.attackBoard(this.activePlayer.getAttackedCell(this.inactivePlayer.getBoard()),this.inactivePlayer)}),400),!0)}endGame(){this.#S.textContent=`${this.activePlayer.name} won!`,this.#g.forEach((t=>t.replaceWith(t.cloneNode(!0))))}},l=document.querySelector(".turn-plate"),o=(t,e)=>Math.floor(Math.random()*(e-t+1))+t,n=()=>{document.querySelectorAll(".gameboard").forEach((t=>t.replaceWith(t.cloneNode(!0)))),l.textContent=""},h=(t,e)=>{const r=[o(0,9),o(0,9)],s=[],a=e?1:0;function i(t,e,r){let[s,a]=t;return e?a+r-1:s+r-1}for(;i(r,e,t)>9;)r[a]=o(0,9);let l,[n,h]=r;l=e?()=>{h+=1}:()=>{n+=1};for(let e=0;e<t;e++)s.push([n,h]),l();return s},c=function(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const e=[1,2,3,4,5],r=e.map((t=>new a(t))),i=e.map((()=>Boolean(o(0,1)))),l=(t=>{const e=new Array(10).fill(null).map((()=>new Array(10).fill(!1))),r=[];return t.forEach((t=>{let{length:s,isVertical:a}=t,i=h(s,a);for(;i.some((t=>{let[r,s]=t;return e[r][s]}));)i=h(s,a);i.forEach((t=>{let[r,s]=t;e[r][s]=!0})),r.push(i[0])})),r})(e.map(((t,e)=>({length:t,isVertical:i[e]})))),n=new s(t);return r.forEach(((t,e)=>{n.getBoard().placeShip({coordinate:l[e],ship:t,isVertical:i[e]})})),n},d=document.querySelector(".js-opponent-board").parentElement,u=document.querySelector(".controls__placement"),m=document.querySelector(".placement__randomize"),y=document.querySelector(".placement__confirm"),p=document.querySelector(".reset-game"),g=()=>(n(),l.style.display="none",d.style.display="none",p.style.display="none",u.style.display="",new i(c(),c(!0)));g(),m.addEventListener("click",(()=>{n(),g()})),y.addEventListener("click",(()=>{d.style.display="",l.style.display="",u.style.display="none",p.style.display=""})),p.addEventListener("click",(()=>g()))})();
//# sourceMappingURL=main.js.map